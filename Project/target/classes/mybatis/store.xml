<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="Store.model.store">
	<!-- 전체상품목록 불러오기 -->
	<select id="GetProductList" resultType="store.model.StoreProductBean">
		select * from Product order by to_number(product_code)
	</select>
	
	<!-- 상품 상세정보 불러오기 -->
  	<select id="GetProducDetailByNum" resultType="store.model.StoreProductBean">
		select * from Product where product_code = #{p_code}
	</select>
	
	<!-- 쿠폰 생성 -->
	<insert id="CreateCoupon" useGeneratedKeys="false">
		insert into coupon values
		(Coupon_seq.nextval,#{coupon_name},#{coupon_rate},#{coupon_qty},#{coupon_qty})
	</insert>
	
	<!-- 쿠폰목록 불러오기 -->
	<select id="GetCouponList" resultType="store.model.StoreCouponBean">
		select * from coupon order by to_number(coupon_code) 
	</select>
	
	<!-- 사용자에게 쿠폰발급 -->
	<insert id="IssueCoupon" useGeneratedKeys="false">
		insert into Coupon_user values
		(#{member_code},#{coupon_code},0)
	</insert>
	
	<!-- 사용자에게 사용할수있는 쿠폰이 있는지 확인 -->
	<select id="CheckAvailableCoupon" resultType="store.model.StoreCoupon_UserBean">
		select * from Coupon_user where member_code = #{member_code} and coupon_state = 0
	</select>
	
	<!-- 결제 정보 넣기 *카드 -->
	<insert id="InsertCard" useGeneratedKeys="false">
		insert into card values
		(#{card_number},#{payment_code},#{card_company},#{card_mmyy},#{card_pw},#{card_installment})
	</insert>
	
	<!-- 결제 정보 넣기 *상품리스트 -->
	<insert id="InsertPayment" useGeneratedKeys="false">
		insert into payment values
		(payment_seq.nextval,#{payment_code},#{member_code},#{card_number},${product_code},#{product_order_qty},#{payment_sale_pay},sysdate)
	</insert>
	
	<!-- 회원코드 기반으로 결제내역가져오기 -->
	<select id="ChkPayment_codeByMember_code" resultType="store.model.StorePaymentBean">
		select distinct payment_code,payment_date from payment 
		where member_code = #{member_code} order by payment_date desc
	</select>
	
	<!-- 결제코드 기반으로 주문목록 가져오기 -->
	<select id="ChkOrderListByPayment_code" resultType="store.model.StorePaymentBean">
		select * from payment 
		where payment_code = #{payment_code} and rownum = 1
	</select>
	
	<!-- 결제코드 기반으로 카드정보 불러오기 -->
	<select id="CardInformationByPayment_code" resultType="store.model.StoreCardBean">
		select * from card
		where payment_code = #{payment_code}
	</select>
	
	<!-- 결제품목 수 -->
	<select id="OrderProductsCount" resultType="Integer">
		select count(*) from payment where
		payment_code = #{payment_code} and member_code = #{member_code}
	</select>
	
	<!-- 주문되있는 상품의 코드와 수량을 가져오는 코드 -->
	<select id="OrderProductsList" resultType="store.model.StorePaymentBean">
		select product_code,product_order_qty from payment
		where payment_code = #{payment_code} and member_code = #{member_code}
	</select>
	
	<select id="salePercent" resultType="Integer">
		select count(*) from payment where
		payment_code = #{payment_code} and member_code = #{member_code}
	</select>
	
</mapper>


