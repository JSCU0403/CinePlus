//결제 정보 저장
	public void insertPayCode(PayBean payBean, PayDetailBean payDetailBean) {
		
			sql = "INSERT INTO pay (pay_code, customer_id, pay_type, pay_price, pay_date) VALUES (?, ?, ?, ?, ?)";
			pstmt = con.prepareStatement(sql);
			pstmt.setString(1, payBean.getPay_code());
			pstmt.setString(2, payBean.getCustomer_id());
			pstmt.setString(3, payBean.getPay_type());
			pstmt.setInt(4, payBean.getPay_price());
			pstmt.setTimestamp(5, payBean.getPay_date());
			
			int check = pstmt.executeUpdate();
			
			if (check > 0) {
				//card테이블 저장
				sql = "insert into card (pay_code, card_num, card_month, card_year, card_pw, card_birth, pay_ins) values (?, ?, ?, ?, ?, ?, ?)";
				pstmt = con.prepareStatement(sql);
				pstmt.setString(1, payBean.getPay_code());
				pstmt.setString(2, payDetailBean.getCard_num());
				pstmt.setInt(3, payDetailBean.getCard_month());
				pstmt.setInt(4, payDetailBean.getCard_year());
				pstmt.setInt(5, payDetailBean.getCard_pw());
				pstmt.setInt(6, payDetailBean.getCard_birth());
				pstmt.setInt(7, payDetailBean.getPay_ins());
				pstmt.executeUpdate();
			} else {
				System.out.println("insertPayCode가 실패했습니다" + check);
			}
			
		
	}//insertPayCode()
		
		
	//장바구니 정보를 결제상세페이지에 저장
	public void cartToPaydetail(PayBean payBean) {
		
		
			sql = "INSERT INTO paydetail (item_code, cart_qty) SELECT item_code, cart_qty FROM cart WHERE customer_id = ? AND cart_status = 0";
			pstmt = con.prepareStatement(sql);
			pstmt.setString(1, payBean.getCustomer_id());
			
			int check = pstmt.executeUpdate();
			
			if (check > 0) {//paydetail테이블에 다중insert가 성공한 경우
				sql = "UPDATE cart SET cart_status = 1 WHERE customer_id = ?";//장바구니 상태 1로 변경
				pstmt = con.prepareStatement(sql);
				pstmt.setString(1, payBean.getCustomer_id());
				int check2 = pstmt.executeUpdate();
				
				if (check2 > 0) {//결제상세에 결제코드 추가 저장
					sql = "UPDATE paydetail SET pay_code = ? WHERE pay_code IS NULL";
					pstmt = con.prepareStatement(sql);
					pstmt.setString(1, payBean.getPay_code());
					int check3 = pstmt.executeUpdate();
					
					if (check3 > 0) {//쿠폰에 결제코드 추가 및 쿠폰상태 변경
						sql = "UPDATE coupon SET pay_code = ?, cp_status= 0 WHERE customer_id = ? AND DATE(cp_date) = DATE(NOW()) AND cp_status = 2 AND pay_code IS NULL";
						pstmt = con.prepareStatement(sql);
						pstmt.setString(1, payBean.getPay_code());
						pstmt.setString(2, payBean.getCustomer_id());
						pstmt.executeUpdate();
					}
				}
			} else {
				System.out.println("cartToPaydetail가 실패했습니다" + check);
			}
			
		
		
	}//cartToPaydetail()
